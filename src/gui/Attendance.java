/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.MySQL;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Asus
 */
public class Attendance extends javax.swing.JPanel {

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    public void loadAction() {
        try {

            Vector v = new Vector();
            v.add("Select");
            v.add("Add new Attendence");
            v.add("Check Attendence");
            DefaultComboBoxModel dcm = new DefaultComboBoxModel(v);
            jComboBox1.setModel(dcm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadClasses() {
        try {
            ResultSet rs = MySQL.search("SELECT * FROM `class` WHERE `status_id`='1'");
            Vector v = new Vector();
            v.add("Select");
            while (rs.next()) {
                v.add(rs.getString("id") + "/" + rs.getString("name") + "-" + rs.getString("year") + "/" + rs.getString("timeslot"));
            }
            DefaultComboBoxModel dcm = new DefaultComboBoxModel(v);
            jComboBox2.setModel(dcm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Attendance() {
        initComponents();
        loadClasses();
        loadAction();
        jTextField1.setEnabled(false);
    }

    public void resetFields() {
        jButton5.setEnabled(true);
        jButton4.setEnabled(true);
        jButton3.setEnabled(true);
        jButton2.setEnabled(true);
        jComboBox1.setEnabled(true);
        jComboBox1.setSelectedIndex(0);
        jDateChooser1.setEnabled(true);
        jDateChooser1.setDate(null);
        jComboBox2.setEnabled(true);
        jComboBox2.setSelectedIndex(0);
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(true);
        jLabel7.setText("None");
        jLabel8.setText("None");
        jLabel9.setText("None");
        jLabel13.setText("None");
        jLabel7.setForeground(Color.BLACK);
        jLabel8.setForeground(Color.BLACK);
        jLabel9.setForeground(Color.BLACK);
        jLabel13.setForeground(Color.BLACK);
        jLabel12.setForeground(Color.BLACK);
        jLabel20.setText("0");
        jLabel21.setText("0");
        jLabel22.setText("0");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jComboBox1.grabFocus();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
    }

    public void loadAtSummery() {
        int rc = jTable1.getRowCount();
        jLabel20.setText(String.valueOf(rc));

        int pTotal = 0;
        int aTotal = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            String at = jTable1.getValueAt(i, 3).toString();
            if (at.equals("1")) {
                pTotal = pTotal + 1;
            }
            if (at.equals("0")) {
                aTotal = aTotal + 1;
            }
        }
        jLabel21.setText(String.valueOf(pTotal));
        jLabel22.setText(String.valueOf(aTotal));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 2), "Attendence & Enrollment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 22), new java.awt.Color(51, 102, 255))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Class Process", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Action");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Class");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Date");

        jButton2.setBackground(new java.awt.Color(153, 204, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("ADD");
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, 0, 55, Short.MAX_VALUE)
                .addGap(21, 21, 21)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Student Process", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("SIN");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton1.setText("Check Payemnt");
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton2.setText("Enroll the Class");
        jRadioButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jRadioButton1)
                .addGap(54, 54, 54)
                .addComponent(jRadioButton2)
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Class ID:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("None");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Class Name:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("None");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Timeslot:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("None");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Action:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("None");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("None");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Date:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(32, 32, 32)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student_SIN", "Student Name", "Time", "Attendence Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setShowHorizontalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setText("PRINT");
        jButton3.setBorderPainted(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 255, 255));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setText("SAVE");
        jButton4.setBorderPainted(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setText("CLEAR");
        jButton5.setBorderPainted(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel17.setText("All:");

        jLabel18.setText("Present:");

        jLabel19.setText("Absent:");

        jLabel20.setText("0");

        jLabel21.setText("0");

        jLabel22.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22))))
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    int action;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int actionIndex = jComboBox1.getSelectedIndex();
        Date date = jDateChooser1.getDate();
        String classdata = jComboBox2.getSelectedItem().toString();

//        System.out.println(action);
//        System.out.println(date);
//        System.out.println(classname);
        if (actionIndex == 0) {
            JOptionPane.showMessageDialog(this, "Please select action", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (date == null) {
            JOptionPane.showMessageDialog(this, "Please enter date", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (classdata.equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please select class", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            action = actionIndex;

            String splitData[] = classdata.split("/", 3);
            String classId = splitData[0];
            String className = splitData[1];
            String classTimeslot = splitData[2];

            String cdate = sdf.format(date);

            if (action == 1) {
                try {
                    ResultSet rs_at = MySQL.search("SELECT * FROM `attendence` WHERE `date`='" + cdate + "' AND `class_id`='" + classId + "'");
                    if (rs_at.next()) {
                        JOptionPane.showMessageDialog(this, "This attendence already added..", "Warning", JOptionPane.WARNING_MESSAGE);
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);
                        jLabel20.setText("0");
                        jLabel21.setText("0");
                        jLabel22.setText("0");
                    } else {
                        jLabel12.setText("Add New Attendence");
                        jLabel7.setText(classId);
                        jLabel8.setText(className);
                        jLabel9.setText(classTimeslot);
                        jLabel13.setText(cdate);
                        jLabel7.setForeground(Color.BLUE);
                        jLabel8.setForeground(Color.BLUE);
                        jLabel9.setForeground(Color.BLUE);
                        jLabel13.setForeground(Color.BLUE);
                        jLabel12.setForeground(Color.BLUE);
                        jTextField1.setEnabled(true);
                        jComboBox1.setSelectedIndex(0);
//                        jDateChooser1.setDate(null);
//                        jComboBox2.setSelectedIndex(0);
                        jRadioButton1.setEnabled(true);
                        jRadioButton2.setEnabled(true);
                        jComboBox1.setEnabled(false);
                        jDateChooser1.setEnabled(false);
                        jComboBox2.setEnabled(false);
                        jButton2.setEnabled(false);
                        jButton4.setEnabled(true);
                        jButton3.setEnabled(false);
                        jButton5.setEnabled(false);
                        loadStudentHasClass();
                    }

                    jDateChooser1.setDate(null);
                    jComboBox2.setSelectedIndex(0);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            } else if (action == 2) {
                try {
                    ResultSet rs_se = MySQL.search("SELECT * FROM `attendence` WHERE `date`='" + cdate + "' AND `class_id`='" + classId + "'");
                    if (rs_se.next()) {
                        jLabel12.setText("Check Attendence");
                        jLabel7.setText(classId);
                        jLabel8.setText(className);
                        jLabel9.setText(classTimeslot);
                        jLabel13.setText(cdate);
                        jLabel7.setForeground(Color.BLUE);
                        jLabel8.setForeground(Color.BLUE);
                        jLabel9.setForeground(Color.BLUE);
                        jLabel13.setForeground(Color.BLUE);
                        jLabel12.setForeground(Color.BLUE);
                        jTextField1.setEnabled(true);
                        jRadioButton1.setEnabled(false);
                        jRadioButton2.setEnabled(false);
                        jButton4.setEnabled(false);
                        jButton3.setEnabled(true);
                        jButton5.setEnabled(true);
                        loadAttendanceTable();

                    } else {
                        JOptionPane.showMessageDialog(this, "No details above attendence..", "Warning", JOptionPane.WARNING_MESSAGE);
//                        jComboBox1.setSelectedIndex(0);
                        jDateChooser1.setDate(null);
                        jComboBox2.setSelectedIndex(0);
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);
                        jLabel20.setText("0");
                        jLabel21.setText("0");
                        jLabel22.setText("0");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public void loadStudentHasClass() {
        String class_id = jLabel7.getText();
        try {
            ResultSet rsc = MySQL.search("SELECT * FROM `student_has_class` INNER JOIN `student` ON `student`.`sin`=`student_has_class`.`student_sin` WHERE `class_id`='" + class_id + "'");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rsc.next()) {
                Vector v = new Vector();
                v.add(rsc.getString("student_has_class.student_sin"));
                v.add(rsc.getString("student.name"));
                v.add("00:00:00");
                v.add("0");

                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        loadAtSummery();
    }

    public void loadAttendanceTable() {
        String class_Id = jLabel7.getText();
        String class_Date = jLabel13.getText();

        try {
            ResultSet rsc = MySQL.search("SELECT * FROM `attendence`\n"
                    + "INNER JOIN `sub_attendence` ON `attendence`.`id`=`sub_attendence`.`attendence_id`\n"
                    + "INNER JOIN `student` ON `sub_attendence`.`student_sin`=`student`.`sin`\n"
                    + "WHERE `attendence`.`class_id`='" + class_Id + "' AND `attendence`.`date`='" + class_Date + "' ;");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rsc.next()) {
                Vector v = new Vector();
                v.add(rsc.getString("sub_attendence.student_sin"));
                v.add(rsc.getString("student.name"));
                v.add(rsc.getString("sub_attendence.time"));
                v.add(rsc.getString("sub_attendence.attendence_type_id"));

                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        loadAtSummery();
    }

    public void loadAttendanceTable(String sin) {
        String st_SIN = sin;
        String class_Id = jLabel7.getText();
        String class_Date = jLabel13.getText();

        try {
            ResultSet rsc = MySQL.search("SELECT * FROM `attendence`\n"
                    + "INNER JOIN `sub_attendence` ON `attendence`.`id`=`sub_attendence`.`attendence_id`\n"
                    + "INNER JOIN `student` ON `sub_attendence`.`student_sin`=`student`.`sin`\n"
                    + "WHERE `attendence`.`class_id`='" + class_Id + "' AND `attendence`.`date`='" + class_Date + "' AND `sub_attendence`.`student_sin`='" + st_SIN + "' ;");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rsc.next()) {
                Vector v = new Vector();
                v.add(rsc.getString("sub_attendence.student_sin"));
                v.add(rsc.getString("student.name"));
                v.add(rsc.getString("sub_attendence.time"));
                v.add(rsc.getString("sub_attendence.attendence_type_id"));

                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        loadAtSummery();
    }


    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed


    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String sin = jTextField1.getText();
            String class_id = jLabel7.getText();
            String at_date = jLabel13.getText();

            String splitData[] = at_date.split("-", 3);
            String at_year = splitData[0];
            String at_month = splitData[1];

            try {
                ResultSet srs = MySQL.search("SELECT * FROM `student` WHERE `sin`='" + sin + "'");
//                srs.next();

                if (sin.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "SIN is empty", "Warning", JOptionPane.WARNING_MESSAGE);
                    jTextField1.grabFocus();
                } else if (srs.next() == false) {
                    JOptionPane.showMessageDialog(this, "Invalid SIN", "Warning", JOptionPane.WARNING_MESSAGE);
                    jTextField1.setText("");
                    jTextField1.grabFocus();
                } else if (srs.getString("status_id").equals("2")) {
                    JOptionPane.showMessageDialog(this, "This student deactivated..", "Warning", JOptionPane.WARNING_MESSAGE);
                    jTextField1.setText("");
                    jTextField1.grabFocus();
                } else {

                    ResultSet sc = MySQL.search("SELECT * FROM `student_has_class` WHERE `student_sin`='" + sin + "' AND `class_id`='" + class_id + "'");

                    if (action == 1) {

                        if (sc.next()) {
                            if (jRadioButton1.isSelected()) {
                                ResultSet rsi = MySQL.search("SELECT * FROM `invoice`\n"
                                        + "INNER JOIN `invoice_item` ON `invoice`.`id`=`invoice_item`.`invoice_id`\n"
                                        + "WHERE `student_sin`='" + sin + "' AND `class_id`='" + class_id + "' AND `month_id`='" + at_month + "' AND `year`='" + at_year + "'");
                                if (rsi.next() == false) {
                                    JOptionPane.showMessageDialog(this, "This student not paid for this month.", "Warning", JOptionPane.WARNING_MESSAGE);
                                } else {
                                    addAttendance(sin);
                                }
                            } else {
                                addAttendance(sin);
                            }

                        } else {
                            if (jRadioButton1.isSelected() == false && jRadioButton2.isSelected() == true) {
                                MySQL.iud("INSERT INTO `student_has_class`(`student_sin`,`class_id`) VALUES('" + sin + "','" + class_id + "')");
                                addToTable = true;
                                addAttendance(sin);
                            } else if (jRadioButton2.isSelected() == true && jRadioButton1.isSelected() == true) {
                                ResultSet rsi2 = MySQL.search("SELECT * FROM `invoice`\n"
                                        + "INNER JOIN `invoice_item` ON `invoice`.`id`=`invoice_item`.`invoice_id`\n"
                                        + "WHERE `student_sin`='" + sin + "' AND `class_id`='" + class_id + "' AND `month_id`='" + at_month + "' AND `year`='" + at_year + "'");
                                if (rsi2.next() == false) {
                                    JOptionPane.showMessageDialog(this, "This student not paid for this month.", "Warning", JOptionPane.WARNING_MESSAGE);
                                } else {
                                    MySQL.iud("INSERT INTO `student_has_class`(`student_sin`,`class_id`) VALUES('" + sin + "','" + class_id + "')");
                                    addToTable = true;
                                    addAttendance(sin);
                                }
                            } else if (jRadioButton1.isSelected() == true && jRadioButton2.isSelected() == false) {
                                ResultSet rsi3 = MySQL.search("SELECT * FROM `invoice`\n"
                                        + "INNER JOIN `invoice_item` ON `invoice`.`id`=`invoice_item`.`invoice_id`\n"
                                        + "WHERE `student_sin`='" + sin + "' AND `class_id`='" + class_id + "' AND `month_id`='" + at_month + "' AND `year`='" + at_year + "'");
                                if (rsi3.next() == false) {
                                    JOptionPane.showMessageDialog(this, "This student not paid for this month.", "Warning", JOptionPane.WARNING_MESSAGE);
                                } else {
                                    int option = JOptionPane.showConfirmDialog(this, "This student is not in this class.. Do you want to add?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                                    if (option == JOptionPane.YES_OPTION) {
                                        MySQL.iud("INSERT INTO `student_has_class`(`student_sin`,`class_id`) VALUES('" + sin + "','" + class_id + "')");
                                        addToTable = true;
                                        addAttendance(sin);
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "This student is not in this class", "Warning", JOptionPane.WARNING_MESSAGE);
                            }
                        }

                    } else if (action == 2) {
                        if (sc.next()) {
                            loadAttendanceTable(sin);
                        } else {
                            JOptionPane.showMessageDialog(this, "No details above SIN..", "Warning", JOptionPane.WARNING_MESSAGE);
                        }
                    }

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            loadAtSummery();
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    boolean addToTable = false;

    public void addAttendance(String sin) {
        String SIN = sin;
        try {
            ResultSet strs = MySQL.search("SELECT * FROM `student` WHERE `sin`='" + SIN + "'");
            strs.next();
            String Sname = strs.getString("name");

            LocalTime time = LocalTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
            String ctime = time.format(formatter);
            //System.out.println(ctime);

            String attendence = "1";

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

            boolean isFound = false;
            int x = -1;

            for (int i = 0; i < dtm.getRowCount(); i++) {
                String id = jTable1.getValueAt(i, 0).toString();

                if (id.equals(SIN)) {
                    isFound = true;
                    x = i;
                    break;
                }
            }

            if (isFound) {

                jTable1.setValueAt(attendence, x, 3);
                jTable1.setValueAt(ctime, x, 2);

            }
            if (addToTable) {

                Vector v = new Vector();
                v.add(SIN);
                v.add(Sname);
                v.add(ctime);
                v.add(attendence);

                dtm.addRow(v);
                addToTable = false;

            }
            jTextField1.setText("");
            jTextField1.grabFocus();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (evt.getClickCount() == 2) {
            resetFields();

        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please add details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            //        attendence_insert
            long mTime = System.currentTimeMillis();
            String uniqueId = mTime + "-" + Login.userId;
            String classId = jLabel7.getText();
            String classDate = jLabel13.getText();

            MySQL.iud("INSERT INTO `attendence`(`date`,`class_id`,`user_id`,`unique_id`) VALUES('" + classDate + "','" + classId + "','" + Login.userId + "','" + uniqueId + "')");
            //        attendence_insert

            try {

                ResultSet rs = MySQL.search("SELECT * FROM `attendence` WHERE `unique_id`='" + uniqueId + "'");
                rs.next();
                String id = rs.getString("id");

                //sub_attendence_insert
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    String st_sin = jTable1.getValueAt(i, 0).toString();
                    String at_time = jTable1.getValueAt(i, 2).toString();
                    String at_type = jTable1.getValueAt(i, 3).toString();

                    MySQL.iud("INSERT INTO `sub_attendence`(`attendence_id`,`student_sin`,`attendence_type_id`,`time`) VALUES('" + id + "','" + st_sin + "','" + at_type + "','" + at_time + "')");

                }
                //sub_attendence_insert

                int option = JOptionPane.showConfirmDialog(this, "New Attendence Saved.. Do you want to print report?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (option == JOptionPane.YES_OPTION) {
                    //print report
                    printAtReport();
                }

                resetFields();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (action == 1) {
            if (evt.getClickCount() == 2) {
                int r = jTable1.getSelectedRow();

                if (r == -1) {
                    JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    int option = JOptionPane.showConfirmDialog(this, "Do you want to change attendence type to absent?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (option == JOptionPane.YES_OPTION) {
                        jTable1.setValueAt("0", r, 3);
                        jTable1.setValueAt("00:00:00", r, 2);
                        loadAtSummery();
                        JOptionPane.showMessageDialog(this, "Attendance changed", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }

                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please add details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            printAtReport();
            resetFields();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        resetFields();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void printAtReport() {
        try {
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String dNow = sdf2.format(new Date());

            String c_id = jLabel7.getText();
            String c_name = jLabel8.getText();
            String c_timeslot = jLabel9.getText();
            String c_date = jLabel13.getText();
            String all_st = jLabel20.getText();
            String p_st = jLabel21.getText();
            String a_st = jLabel22.getText();
            String issued = String.valueOf(Login.userId);

            InputStream filePath = getClass().getResourceAsStream("/reports/at_report.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(filePath);

            HashMap parameters = new HashMap();
            parameters.put("nowdate", dNow);
            parameters.put("issued", issued);
            parameters.put("classid", c_id);
            parameters.put("classname", c_name);
            parameters.put("timeslot", c_timeslot);
            parameters.put("classdate", c_date);
            parameters.put("allstudent", all_st);
            parameters.put("present", p_st);
            parameters.put("absent", a_st);

            TableModel tm = jTable1.getModel();
            JRTableModelDataSource dataSource = new JRTableModelDataSource(tm);

            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, dataSource);
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
